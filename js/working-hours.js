class WorkingHoursDisplay {
    constructor() {
        this.workingHours = null;
        this.init();
        this.setupAutoUpdate();
    }

    async init() {
        await this.loadData();
        this.updateDisplay();
    }

    async loadData() {
        try {
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage (–º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–∫–∏)
            const localData = localStorage.getItem('workingHoursData');
            if (localData) {
                this.workingHours = JSON.parse(localData);
                console.log('üîÑ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ –∞–¥–º–∏–Ω–∫–∏)');
                return;
            }

            // –ï—Å–ª–∏ –Ω–µ—Ç –≤ localStorage, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å —Å–µ—Ä–≤–µ—Ä–∞
            const response = await fetch('data/working-hours.json');
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤');
            }
            this.workingHours = await response.json();
            console.log('üì° –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤:', error);
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
            this.workingHours = this.getDefaultData();
        }
    }

    setupAutoUpdate() {
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è localStorage (–¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ –∞–¥–º–∏–Ω–∫–∏)
        window.addEventListener('storage', (e) => {
            if (e.key === 'workingHoursData' && e.newValue) {
                console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
                this.workingHours = JSON.parse(e.newValue);
                this.updateDisplay();
                this.showUpdateNotification();
            }
        });

        // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ (–µ—Å–ª–∏ –æ–Ω–∞ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ)
        window.addEventListener('message', (e) => {
            if (e.data.type === 'workingHoursUpdate') {
                console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
                this.workingHours = e.data.data;
                this.updateDisplay();
                this.showUpdateNotification();
            }
        });
    }

    showUpdateNotification() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, rgb(34, 197, 94) 0%, rgb(22, 163, 74) 100%);
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            font-family: 'Inter', sans-serif;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(34, 197, 94, 0.3);
            z-index: 10000;
            transform: translateX(400px);
            transition: all 0.3s ease;
        `;
        notification.textContent = '‚úÖ –†–∞–±–æ—á–∏–µ —á–∞—Å—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!';

        document.body.appendChild(notification);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);

        // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.transform = 'translateX(400px)';
            setTimeout(() => {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    getDefaultData() {
        return {
            title: "Working Hours",
            days: [
                { name: "Monday", nameRu: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", time: "11:00 ‚Äî 22:00", status: "green" },
                { name: "Tuesday", nameRu: "–í—Ç–æ—Ä–Ω–∏–∫", time: "11:00 ‚Äî 22:00", status: "green" },
                { name: "Wednesday", nameRu: "–°—Ä–µ–¥–∞", time: "11:00 ‚Äî 22:00", status: "green" },
                { name: "Thursday", nameRu: "–ß–µ—Ç–≤–µ—Ä–≥", time: "11:00 ‚Äî 22:00", status: "green" },
                { name: "Friday", nameRu: "–ü—è—Ç–Ω–∏—Ü–∞", time: "11:00 ‚Äî 23:00", status: "green" },
                { name: "Saturday", nameRu: "–°—É–±–±–æ—Ç–∞", time: "11:00 ‚Äî 23:00", status: "green" },
                { name: "Sunday", nameRu: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", time: "12:00 ‚Äî 21:00", status: "yellow" }
            ]
        };
    }

    getStatusColor(status) {
        const colors = {
            'green': 'rgb(34, 197, 94)',
            'yellow': 'rgb(234, 179, 8)',
            'red': 'rgb(239, 68, 68)'
        };
        return colors[status] || colors['green'];
    }

    getStatusOpacity(status) {
        const opacities = {
            'green': '1',
            'yellow': '0.8',
            'red': '0.6'
        };
        return opacities[status] || opacities['green'];
    }

    updateDisplay() {
        // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ä–∞–±–æ—á–∏–º–∏ —á–∞—Å–∞–º–∏
        const workingHoursContainer = document.querySelector('.restaurant-info-card');
        if (!workingHoursContainer) {
            console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const titleElement = workingHoursContainer.querySelector('h3');
        const daysContainer = workingHoursContainer.querySelector('div[style*="display: flex; flex-direction: column; gap: 8px;"]');

        if (!titleElement || !daysContainer) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç—ã —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        titleElement.textContent = this.workingHours.title;

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–Ω–µ–π
        daysContainer.innerHTML = '';

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è
        this.workingHours.days.forEach(day => {
            const dayElement = this.createDayElement(day);
            daysContainer.appendChild(dayElement);
        });
    }

    createDayElement(day) {
        const dayDiv = document.createElement('div');

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        let backgroundOpacity, borderOpacity;
        switch(day.status) {
            case 'green':
                backgroundOpacity = '0.05';
                borderOpacity = '0.1';
                break;
            case 'yellow':
                backgroundOpacity = '0.08';
                borderOpacity = '0.15';
                break;
            case 'red':
                backgroundOpacity = '0.03';
                borderOpacity = '0.08';
                break;
            default:
                backgroundOpacity = '0.05';
                borderOpacity = '0.1';
        }

        dayDiv.style.cssText = `
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 6px 12px;
            border-radius: 8px;
            background: rgba(255, 255, 255, ${backgroundOpacity});
            border: 1px solid rgba(239, 231, 210, ${borderOpacity});
            margin-bottom: 8px;
        `;

        dayDiv.innerHTML = `
            <span style="font-family: 'Inter', sans-serif; font-size: 13px; font-weight: 500; color: rgba(255, 255, 255, 0.95);">${day.name}</span>
            <div style="display: flex; align-items: center; gap: 8px;">
                <span style="font-family: 'JetBrains Mono', monospace; font-size: 12px; color: rgb(239, 231, 210); font-weight: 600;">${day.time}</span>
                <span style="width: 6px; height: 6px; background-color: ${this.getStatusColor(day.status)}; border-radius: 50%; opacity: ${this.getStatusOpacity(day.status)};"></span>
            </div>
        `;

        return dayDiv;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏)
    async refresh() {
        await this.loadData();
        this.updateDisplay();
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if (document.querySelector('.restaurant-info-card')) {
        window.workingHoursDisplay = new WorkingHoursDisplay();
    }
});

// –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
window.addEventListener('workingHoursUpdated', (event) => {
    if (window.workingHoursDisplay) {
        window.workingHoursDisplay.refresh();
    }
});
